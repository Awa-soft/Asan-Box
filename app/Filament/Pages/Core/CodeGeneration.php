<?php

namespace App\Filament\Pages\Core;

use App\Filament\Pages\Reports\POS\PurchaseCodes;
use App\Models\POS\PurchaseDetailCode;
use App\Models\POS\PurchaseInvoiceDetail;
use Filament\Pages\Page;
use Illuminate\Contracts\Support\Htmlable;
use Illuminate\Contracts\View\View;
use Illuminate\Support\Str;

class CodeGeneration extends Page
{
    protected static ?string $navigationIcon = 'heroicon-o-document-text';
    public $numberOfCodes = 10;
    public $codes;
    public function getTitle(): string|Htmlable
    {
        return trans('lang.codeGeneration');
    }
    public static function getNavigationLabel(): string
    {
        return trans('lang.codeGeneration');
    }
    public static function getNavigationGroup(): ?string
    {
        return trans('Inventory/lang.group_label');
    }
    protected static ?int $navigationSort = 50;

    public function render(): View
    {
        if($this->numberOfCodes > 100){
            $this->numberOfCodes = 100;
        }
        $this->codes = [];
        for ($i = 0; $i < $this->numberOfCodes;$i++){
            $this->codes[] = $this->generateCode();
        }
        return parent::render(); // TODO: Change the autogenerated stub
    }

    private function generateCode():string
    {
        do{
            $code = strtoupper(Str::random(12));
        }while ($this->codeExists($code));
        return $code;
    }

    private function codeExists(string $code): bool
    {
        if(in_array($code, $this->codes)){
            return true;
        }
        return PurchaseDetailCode::where('code',$code)->exists();
    }
    protected static string $view = 'filament.pages.core.code-generation';
}
