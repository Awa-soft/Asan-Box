<?php

namespace App\Models\POS;

use App\Models\Logistic\Branch;
use App\Traits\Core\HasUser;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;

class PurchaseOrder extends Model
{
    use HasFactory;
    use HasUser,SoftDeletes;


    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($model){
            if($model->branch_id == null){
             if(auth()->user()->ownerable_type == 'App\Models\Logistic\Branch'){
                 $model->branch_id = auth()->user()->ownerable_id;
             }else{
                 $model->branch_id = 1;
             }
            }
            $model->invoice_number = static::getInvoiceNumber($model->branch_id);
        });
    }

    public static function getInvoiceNumber($branch_id)
    {
        return (self::where('branch_id',$branch_id)->orderBy('invoice_number','desc')->get()->first()?->invoice_number??0) + 1;
    }

    public function detail():HasMany
    {
        return $this->hasMany(PurchaseOrderDetail::class);
    }
    public function branch():BelongsTo
    {
        return $this->belongsTo(Branch::class);
    }
}
